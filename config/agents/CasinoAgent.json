{
  "class": "CustomAgent",
  "description": "Handles casino games, providers, and related activities. This agent can answer questions about casino game offerings, categories, and providers. Tables: casino_games, casino_games_old, casino_categories, casino_providers, sb_casino_games, sb_casino_providers, gap_casino_games",
  "model_type": "bedrock",
  "model_name": "anthropic.claude-3-7-sonnet-20250219-v1:0",
  "system_prompt": "\nYou are CasinoAgent, a specialized database agent focused on casino games and providers.\n\nYour expertise covers these tables: casino_games, casino_games_old, casino_categories, casino_providers, sb_casino_games, sb_casino_providers, gap_casino_games.\n\nAdditional Instructions:\n- When a user request requires multiple tool executions (e.g., multiple independent queries or lookups), dispatch these tool calls in parallel whenever possible to minimize response time.\n- Aggregate and summarize the results from all parallel tool calls before responding to the user.\n- If any tool call fails, report the error clearly but still return results from successful tool calls.\n- Only execute tool calls in parallel if they are independent and do not depend on each other's results.\n\nInstructions:\n- Only query the tables within your domain of expertise\n- Only allow and execute read-only queries (e.g., SELECT). Do NOT allow or execute any queries that edit, delete, or modify the database (such as UPDATE, DELETE, INSERT, ALTER, DROP, etc.).\n- Never fetch or return the entire database or very large datasets in a single response. If a query could return a large amount of data, use intelligent pagination and inform the user about the data size and how to request more if needed.\n- Always prioritize concise, relevant answers. Summarize or aggregate results when possible to avoid context overflow.\n- If a user requests a restricted action (edit, delete, modify), politely refuse and explain that only read-only access is permitted.\n- When answering, provide clear explanations in natural language. Do NOT show SQL queries unless the user explicitly asks for them (e.g., \"show SQL\" or \"give me the query\").\n- Do not ask users for query confirmation. Always infer the required details and generate the answer directly.\n- Provide answers in clear, natural language unless the user explicitly requests otherwise.\n- Focus on casino game offerings, categories, and provider information",
  "tools": [
    "postgres_query",
    "append_memory"
  ],
  "parallel_tools": true,
  "max_parallel_tools": 3,
  "memory": "[2025-08-23 12:46:12] Table: casino_categories\nColumns:\n- id: bigint (NOT NULL) - Primary key\n- active: boolean (NOT NULL) - Indicates if the category is active\n- code: character varying (NOT NULL) - Category code\n- create_time: timestamp without time zone - When the category was created\n- created_by: character varying - Who created the category\n- default_category: boolean (NOT NULL) - Indicates if this is a default category\n- game_ids: character varying - IDs of games in this category\n- house_id: bigint (NOT NULL) - House/casino identifier\n- image: bigint - Image identifier\n- redirection_url: character varying - URL for redirection\n- sequence: integer - Order/sequence number\n- sports_book_url: character varying (NOT NULL) - Sports book URL\n- title: character varying (NOT NULL) - Category title/name\n- update_time: timestamp without time zone - When the category was last updated\n- updated_by: character varying - Who last updated the category\n- version: bigint - Version number\n\n[2025-08-23 12:46:22] Table: casino_games\nColumns:\n- id: bigint (NOT NULL) - Primary key\n- enable: character varying - Indicates if the game is enabled\n- game_code: character varying - Game code\n- game_id: integer (NOT NULL) - Game identifier\n- game_name: character varying - Name of the game\n- max_limits: text - Maximum betting limits\n- min_limits: text - Minimum betting limits\n- provider: character varying - Game provider name (links to casino_providers)\n- type: character varying - Game type/category\n- url: character varying - Game URL\n- code: character varying - Game code\n- create_time: timestamp without time zone - When the game was created\n- created_by: character varying - Who created the game\n- house_id: bigint - House/casino identifier (links to house_id in other tables)\n- thumbnail: character varying - Thumbnail image URL\n- title: character varying - Game title\n- update_time: timestamp without time zone - When the game was last updated\n- updated_by: character varying - Who last updated the game\n- version: bigint - Version number\n\n[2025-08-23 12:46:30] Table: casino_games_old\nColumns:\n- id: bigint (NOT NULL) - Primary key\n- enable: character varying - Indicates if the game is enabled\n- game_code: character varying - Game code\n- game_id: integer (NOT NULL) - Game identifier\n- game_name: character varying - Name of the game\n- max_limits: text - Maximum betting limits\n- min_limits: text - Minimum betting limits\n- provider: character varying - Game provider name\n- type: character varying - Game type/category\n- url: character varying - Game URL\n\nNote: This appears to be an older version of the casino_games table with fewer columns.\n\n[2025-08-23 12:46:40] Table: casino_providers\nColumns:\n- id: bigint (NOT NULL) - Primary key\n- active: boolean (NOT NULL) - Indicates if the provider is active\n- create_time: timestamp without time zone - When the provider was created\n- created_by: character varying - Who created the provider\n- house_id: bigint (NOT NULL) - House/casino identifier\n- image: bigint - Image identifier\n- redirection_url: character varying - URL for redirection\n- title: character varying (NOT NULL) - Provider title/name\n- update_time: timestamp without time zone - When the provider was last updated\n- updated_by: character varying - Who last updated the provider\n- version: bigint - Version number\n\nNote: The provider name in this table (title column) can be joined with the provider column in the casino_games table.\n\n[2025-08-23 12:46:50] Table: sb_casino_games\nColumns:\n- id: bigint (NOT NULL) - Primary key\n- categories: character varying - Game categories\n- create_time: timestamp without time zone - When the entry was created\n- created_by: character varying - Who created the entry\n- game_id: bigint (NOT NULL) - Game identifier (can be joined with game_id in casino_games)\n- house_id: bigint (NOT NULL) - House/casino identifier\n- sequence: integer (NOT NULL) - Order/sequence number\n- sports_book_url: character varying (NOT NULL) - Sports book URL\n- state: integer - State of the game\n- update_time: timestamp without time zone - When the entry was last updated\n- updated_by: character varying - Who last updated the entry\n- version: bigint - Version number\n\n[2025-08-23 12:46:59] Table: sb_casino_providers\nColumns:\n- id: bigint (NOT NULL) - Primary key\n- create_time: timestamp without time zone - When the entry was created\n- created_by: character varying - Who created the entry\n- house_id: bigint (NOT NULL) - House/casino identifier\n- provider_id: bigint (NOT NULL) - Provider identifier (can be joined with id in casino_providers)\n- sequence: integer (NOT NULL) - Order/sequence number\n- sports_book_url: character varying (NOT NULL) - Sports book URL\n- update_time: timestamp without time zone - When the entry was last updated\n- updated_by: character varying - Who last updated the entry\n- version: bigint - Version number\n\n[2025-08-23 12:47:10] Table: gap_casino_games\nColumns:\n- id: bigint (NOT NULL) - Primary key\n- category: character varying - Game category\n- game_code: character varying - Game code\n- game_id: character varying - Game identifier\n- game_name: character varying - Name of the game\n- house_id: bigint - House/casino identifier\n- provider_name: character varying - Provider name\n- state: character varying - State of the game (default: 'PENDING')\n- sub_provider_name: character varying - Sub-provider name\n- url_background: character varying - Background image URL\n- url_thumb: character varying - Thumbnail image URL\n- enable: character varying - Indicates if the game is enabled\n- status: character varying - Game status\n- trending: boolean - Indicates if the game is trending (default: false)\n- trending_thumbnail: character varying - Trending thumbnail URL\n- bonus_enabled: boolean - Indicates if bonus is enabled (default: false)\n- priority: integer - Priority/ranking of the game\n- tag: character varying - Game tag\n- super_provider_name: character varying - Super provider name (default: 'GAP')\n- provider_tag: character varying - Provider tag\n\n[2025-08-23 12:47:19] Table Relationships:\n\n1. casino_games and casino_providers:\n   - casino_games.provider can be joined with casino_providers.title\n   - Both tables share house_id for filtering by casino\n\n2. casino_games and casino_categories:\n   - casino_categories.game_ids likely contains IDs that match casino_games.game_id\n   - Both tables share house_id for filtering by casino\n\n3. sb_casino_games and casino_games:\n   - sb_casino_games.game_id can be joined with casino_games.id or casino_games.game_id\n   - Both tables share house_id for filtering by casino\n\n4. sb_casino_providers and casino_providers:\n   - sb_casino_providers.provider_id can be joined with casino_providers.id\n   - Both tables share house_id for filtering by casino\n\n5. gap_casino_games relationships:\n   - gap_casino_games.provider_name might correspond to casino_providers.title\n   - gap_casino_games.game_id might correspond to casino_games.game_id (though data types differ)\n   - gap_casino_games.house_id can be joined with house_id in other tables\n\n6. Common fields across tables:\n   - house_id: Present in all tables, can be used to filter by specific casino\n   - id: Primary key in all tables\n   - create_time/update_time: Tracking when records were created/modified\n   - created_by/updated_by: Tracking who created/modified records\n   - version: Version tracking present in most tables\n\n[2025-08-23 12:47:40] Sample Data:\n\ngap_casino_games table contains actual data with entries like:\n1. Excite Asia Lobby (Provider: MAC88, Category: Game Lobby)\n2. 6+ Poker (Provider: BETGAMES, Category: others)\n3. Sunset Highways (Provider: TC, Category: Slots)\n4. Classic Baccarat 3 (Provider: EEAI, Category: Live)\n5. x1000 Quantum Roulette (Provider: DC, Category: Live Roulette)\n\nThis confirms that the database contains information about various casino games from different providers, categorized by game types like Slots, Live games, etc.\n\nGame categories observed include: Game Lobby, others, Slots, Live, Live Roulette.\nProviders observed include: MAC88, BETGAMES, TC, EEAI, DC.\n\n[2025-08-23 12:47:58] Main Game Categories:\nThe database contains a wide variety of game categories (440 distinct values), which can be broadly grouped into:\n1. Major game types: Slots, Live, Table Games, Card Games, Bingo, Lottery, Crash Games, Arcade\n2. Specific game titles: Like \"dragonsluck\", \"megaball\", \"gonzosquestmegaways\"\n3. Game variants: Like \"Live Roulette\", \"Live Blackjack\", \"Video Poker\"\n4. Generic categories: Like \"Premium Slots\", \"Game Shows\"\n\nMain Providers (sample):\nAWC, BETGAMES, CRASH88, CREED, DARWIN, DC, EA, EEAI, EVOLUTION, EZUGI, FIESTA777, GAPLOBBY, INPLM, JACKTOP, JiLi, KINGMIDAS, LLG, MAC88, MACAW, MARBLES, MATKA, N2Live, NMATIC, PINKY, POPOK, RG, RICH88, SAP, SPRIBE, SUNO\n\nThis information shows that the database contains a comprehensive catalog of casino games across different categories and from numerous providers.\n\n[2025-08-23 12:48:09] Database Summary for Casino Games:\n\n1. Main Tables:\n   - casino_games: Primary table with game details including provider, type, limits\n   - casino_games_old: Legacy version with fewer columns\n   - casino_categories: Categories for organizing games\n   - casino_providers: Information about game providers\n   - sb_casino_games: Likely a sportsbook-related mapping for casino games\n   - sb_casino_providers: Likely a sportsbook-related mapping for providers\n   - gap_casino_games: Appears to be the most actively used table with current game data\n\n2. Key Relationships:\n   - Games are linked to providers (casino_games.provider → casino_providers.title)\n   - Games are organized into categories (game_ids in casino_categories)\n   - Multiple tables share house_id for filtering by casino/operator\n   - sb_casino_games links to casino_games via game_id\n   - sb_casino_providers links to casino_providers via provider_id\n\n3. Content Overview:\n   - Wide variety of game categories (440+ distinct values)\n   - Major game types include: Slots, Live Casino, Table Games, Card Games, Bingo, Lottery, Crash Games\n   - Numerous game providers (30+ distinct providers)\n   - Games have attributes like enable/disable status, min/max limits, URLs, thumbnails\n\n4. Query Patterns:\n   - Filter games by provider: WHERE provider_name = 'X' or JOIN with casino_providers\n   - Filter games by category: WHERE category = 'Y'\n   - Filter active/enabled games: WHERE enable = 'Y' or active = true\n   - Filter by house/casino: WHERE house_id = Z\n   - Join tables to get complete game information with provider details"
}