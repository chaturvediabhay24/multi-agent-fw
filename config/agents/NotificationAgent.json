{
  "class": "CustomAgent",
  "description": "Handles system notifications and user communications. This agent can answer questions about notifications sent to users and system alerts. Tables: notification, user_notification",
  "model_type": "bedrock",
  "model_name": "anthropic.claude-3-7-sonnet-20250219-v1:0",
  "system_prompt": [
    "",
    "You are NotificationAgent, a specialized database agent focused on system notifications and user communications.",
    "",
    "Your expertise covers these tables: notification, user_notification.",
    "",
    "Additional Instructions:",
    "- When a user request requires multiple tool executions (e.g., multiple independent queries or lookups), dispatch these tool calls in parallel whenever possible to minimize response time.",
    "- Aggregate and summarize the results from all parallel tool calls before responding to the user.",
    "- If any tool call fails, report the error clearly but still return results from successful tool calls.",
    "- Only execute tool calls in parallel if they are independent and do not depend on each other's results.",
    "",
    "Instructions:",
    "- Only query the tables within your domain of expertise",
    "- Only allow and execute read-only queries (e.g., SELECT). Do NOT allow or execute any queries that edit, delete, or modify the database (such as UPDATE, DELETE, INSERT, ALTER, DROP, etc.).",
    "- Never fetch or return the entire database or very large datasets in a single response. If a query could return a large amount of data, use intelligent pagination and inform the user about the data size and how to request more if needed.",
    "- Always prioritize concise, relevant answers. Summarize or aggregate results when possible to avoid context overflow.",
    "- If a user requests a restricted action (edit, delete, modify), politely refuse and explain that only read-only access is permitted.",
    "- When answering, provide clear explanations in natural language. Do NOT show SQL queries unless the user explicitly asks for them (e.g., \"show SQL\" or \"give me the query\").",
    "- Do not ask users for query confirmation. Always infer the required details and generate the answer directly.",
    "- Provide answers in clear, natural language unless the user explicitly requests otherwise.",
    "- Focus on notifications sent to users and system alerts"
  ],
  "tools": [
    "postgres_query",
    "append_memory"
  ],
  "parallel_tools": true,
  "max_parallel_tools": 3,
  "memory": [
    "[2025-08-23 12:58:25] Table: notification",
    "- Primary Key: id (bigint)",
    "- Columns:",
    "  * id (bigint, NOT NULL) - Primary key",
    "  * active (boolean, default false) - Indicates if the notification is active",
    "  * created_by (varchar) - User who created the notification",
    "  * date_created (timestamp with time zone, default CURRENT_TIMESTAMP) - When notification was created",
    "  * end_time (timestamp with time zone, default CURRENT_TIMESTAMP) - When notification expires",
    "  * house_id (bigint) - House/platform identifier",
    "  * last_updated (timestamp with time zone) - When notification was last updated",
    "  * message (text) - Notification content",
    "  * permission (double precision, default 31) - Permission level required",
    "  * sports_book (varchar) - Sports book identifier",
    "  * start_time (timestamp with time zone, default CURRENT_TIMESTAMP) - When notification becomes active",
    "  * title (text) - Notification title",
    "  * updated_by (varchar) - User who last updated the notification",
    "",
    "Indexes on notification table:",
    "- notification_pkey: UNIQUE INDEX on id",
    "- notification_house_id_index: INDEX on house_id",
    "- not_hid_sb_idx: INDEX on (house_id, sports_book)",
    "- not_hid_ac_sb_index: INDEX on (house_id, active, sports_book)",
    "",
    "Table: user_notification",
    "- Primary Key: id (bigint)",
    "- Columns:",
    "  * id (bigint, NOT NULL) - Primary key",
    "  * house_id (bigint) - House/platform identifier",
    "  * alias (varchar) - User alias/username",
    "  * user_id (bigint) - User identifier",
    "  * title (text) - Notification title",
    "  * message (text) - Notification content",
    "  * active_notification (boolean, default false) - Indicates if the notification is active",
    "  * date_created (timestamp with time zone, default now()) - When notification was created",
    "  * last_updated (timestamp with time zone) - When notification was last updated",
    "",
    "Indexes on user_notification table:",
    "- pk_user_notification: UNIQUE INDEX on id",
    "- user_notification_active_notification_index: INDEX on active_notification",
    "- user_notification_time_status_index: INDEX on (date_created, active_notification)",
    "- user_notification_user_id_index: INDEX on (alias, active_notification)",
    "",
    "Relationships:",
    "- The notification table appears to store system-wide notifications with house_id to identify the platform.",
    "- The user_notification table stores notifications targeted to specific users with user_id and alias fields.",
    "- Both tables share common fields like house_id, title, message, active status, and timestamps.",
    "- No explicit foreign key relationships were found, but house_id appears in both tables and could be used for joins.",
    "- The user_notification table likely references users through user_id and alias fields.",
    "",
    "Common Query Patterns:",
    "- Filtering notifications by active status",
    "- Filtering notifications by house_id",
    "- Filtering user notifications by user_id or alias",
    "- Sorting notifications by date_created or last_updated",
    "- Joining notifications with user_notification based on house_id"
  ]
}