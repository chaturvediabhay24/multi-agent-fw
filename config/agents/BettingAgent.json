{
  "class": "CustomAgent",
  "description": "Manages sports betting, customer orders, and betting exposures. This agent can answer questions about bets, market exposures, and sports books. Tables: customer_order, customer_order_old, market_exposure, market_exposure_old, sports_book, sports_book_aliases, sports_book_level_games, order_domain_event, order_limit, order_setting, system_bet_locked_user, sap_pending_bets",
  "model_type": "bedrock",
  "model_name": "anthropic.claude-3-7-sonnet-20250219-v1:0",
  "system_prompt": "\nYou are BettingAgent, a specialized database agent focused on sports betting and customer orders.\n\nYour expertise covers these tables: customer_order, customer_order_old, market_exposure, market_exposure_old, sports_book, sports_book_aliases, sports_book_level_games, order_domain_event, order_limit, order_setting, system_bet_locked_user, sap_pending_bets.\n\nAdditional Instructions:\n- When a user request requires multiple tool executions (e.g., multiple independent queries or lookups), dispatch these tool calls in parallel whenever possible to minimize response time.\n- Aggregate and summarize the results from all parallel tool calls before responding to the user.\n- If any tool call fails, report the error clearly but still return results from successful tool calls.\n- Only execute tool calls in parallel if they are independent and do not depend on each other's results.\n\nInstructions:\n- Only query the tables within your domain of expertise\n- Only allow and execute read-only queries (e.g., SELECT). Do NOT allow or execute any queries that edit, delete, or modify the database (such as UPDATE, DELETE, INSERT, ALTER, DROP, etc.).\n- Never fetch or return the entire database or very large datasets in a single response. If a query could return a large amount of data, use intelligent pagination and inform the user about the data size and how to request more if needed.\n- Always prioritize concise, relevant answers. Summarize or aggregate results when possible to avoid context overflow.\n- If a user requests a restricted action (edit, delete, modify), politely refuse and explain that only read-only access is permitted.\n- When answering, provide clear explanations in natural language. Do NOT show SQL queries unless the user explicitly asks for them (e.g., \"show SQL\" or \"give me the query\").\n- Do not ask users for query confirmation. Always infer the required details and generate the answer directly.\n- Provide answers in clear, natural language unless the user explicitly requests otherwise.\n- Focus on bets, market exposures, and sports book operations",
  "tools": [
    "postgres_query",
    "append_memory"
  ],
  "parallel_tools": true,
  "max_parallel_tools": 3,
  "memory": "[2025-08-23 12:44:41] Database Schema Information:\n\n1. customer_order table:\n- Key columns: order_id (bigint, NOT NULL)\n- Important fields: account_id, username, placed_stake, matched_stake, placed_odd, matched_odd, returns, status, placed_time, update_time\n- Contains bet details including event information (sport_id, sport_name, event_id, event_name)\n- Tracks market information (market_id, market_name, market_type)\n- Contains outcome information (outcome_id, outcome_name)\n- Financial details: placed_stake, matched_stake, cancelled_stake, remaining_stake, returns\n- Status tracking: status, sub_status, alert_status\n\n2. customer_order_old table:\n- Similar structure to customer_order\n- Appears to be a historical/archive table for older orders\n- Key columns: order_id (bigint, NOT NULL)\n- Contains similar betting and financial information as customer_order\n\n3. market_exposure table:\n- Key columns: id (bigint, NOT NULL)\n- Tracks exposure by market\n- Contains account information: account_id, account_key, account_path, username\n- Event information: sport_id, event_id, event_name, competition_id, competition_name\n- Market information: market_id, market_name, market_type, market_status, market_result\n- Financial metrics: matched_risk, unmatched_risk, net_risk, settlement_amount, sap_matched_risk, sap_unmatched_risk, sap_settlement_amount\n- Betting metrics: bets_count, matched_bets, unmatched_bets, win_count, voided_count\n- Timestamp fields: create_time, update_time, event_date, market_create_time\n\n4. market_exposure_old table:\n- Historical/archive version of market_exposure\n- Similar structure to market_exposure\n- Key columns: id (bigint, NOT NULL)\n\n5. sports_book table:\n- Key columns: sports_book_url (varchar, NOT NULL)\n- Contains configuration for sports book operations\n- Features enabled/disabled flags: affiliate_enabled, b2c_enabled, bonus_enabled, demo_user_enabled, payments_enabled, signup_enabled, casino_enabled, sports_enabled\n- Business settings: sports_book_edge, casino_edge, affiliate_commission\n- Administrative info: admin, house_id, manager\n- UI settings: welcome_page, languages, skins\n\n6. sports_book_aliases table:\n- Links aliases to sports books\n- Key columns: alias (varchar, NOT NULL)\n- Contains: sports_book, house_id, is_skin flag\n\n7. sports_book_level_games table:\n- Maps sports books to game IDs\n- Key columns: sports_book_url (varchar, NOT NULL)\n- Contains: game_ids\n\n8. order_domain_event table:\n- Tracks events related to orders\n- Key columns: id (bigint, NOT NULL)\n- Contains: type, source, time, data (bytea), data_content_type\n\n9. order_limit table:\n- Defines limits for orders\n- Key columns: id (bigint, NOT NULL)\n- Contains: house_id, limit_key, limit_item (bytea), create_time, update_time, updated_by\n\n10. order_setting table:\n- Settings for orders by account path\n- Key columns: account_path (varchar, NOT NULL)\n- Contains: commission_setting (bytea), hold_percentage, create_time\n\n11. system_bet_locked_user table:\n- Tracks users with locked bets\n- Key columns: id (bigint, NOT NULL)\n- Contains: user_id, username, balance, exposure, create_time\n\n12. sap_pending_bets table:\n- Tracks pending bets in the system\n- Key columns: id (bigint, NOT NULL)\n- Contains bet details: bet_id, bet_type, amount, odd_value, risk\n- User information: user_id, username, account_path\n- Event information: event_id, event_name, event_date, sport_id\n- Market information: market_id, market_name, market_type\n- Status tracking: status, is_bet_placed\n- Timestamp fields: create_time, update_time\n\nKey relationships between tables:\n- customer_order and market_exposure can be joined on market_id, event_id, account_id\n- sports_book and sports_book_aliases can be joined on sports_book_url and sports_book\n- customer_order and sap_pending_bets can be related through bet_id/order_id\n- system_bet_locked_user can be joined with customer_order on user_id/account_id\n- order_setting can be linked to customer_order through account_path\n\n[2025-08-23 12:44:51] Status codes and types in customer_order table:\n- order_type: Integer field that likely indicates bet type (back, lay, etc.)\n- status: Integer field that tracks the overall status of the order (pending, matched, settled, etc.)\n- sub_status: Integer field providing additional status details\n- alert_status: Integer field possibly indicating if the order requires attention\n\nMarket exposure tracking:\n- market_exposure table contains detailed risk analysis for markets\n- Fields like matched_risk, unmatched_risk, and net_risk show financial exposure\n- settlement_amount indicates the final financial outcome after market settlement\n- bets_count, matched_bets, unmatched_bets provide volume metrics\n- win_count and voided_count track bet outcomes\n\nRelationships between tables:\n1. customer_order ↔ market_exposure:\n   - Join on market_id, event_id, account_id/username\n   - This relationship shows individual bets and their contribution to market exposure\n\n2. sports_book ↔ sports_book_aliases:\n   - Join on sports_book_url = sports_book\n   - This shows all aliases for a particular sports book\n\n3. customer_order ↔ sap_pending_bets:\n   - Pending bets eventually become customer orders\n   - Can track the lifecycle of a bet from pending to placed\n\n4. order_setting ↔ customer_order:\n   - Settings defined at account_path level apply to orders placed under that path\n   - Commission settings and hold percentages are defined here\n\n5. market_exposure ↔ market_exposure_old:\n   - Historical record of market exposures\n   - Useful for analyzing how exposure changed over time\n\n6. customer_order ↔ customer_order_old:\n   - Historical record of customer orders\n   - Useful for analyzing past betting patterns\n\n[2025-08-23 12:45:01] Common Query Patterns:\n\n1. Customer Order Analysis:\n   - Filter orders by status, time period, username, or sport\n   - Aggregate financial metrics like total stake, returns, or profit\n   - Group by market, event, or time period for trend analysis\n\n2. Market Exposure Analysis:\n   - Analyze risk exposure across markets, events, or sports\n   - Identify markets with highest financial exposure\n   - Track settlement outcomes against exposure\n\n3. Sports Book Configuration:\n   - View enabled features for specific sports books\n   - Check commission and edge settings\n   - Verify alias configurations\n\n4. User Betting Activity:\n   - Track betting patterns for specific users\n   - Analyze stake sizes, bet types, and preferred markets\n   - Calculate user profitability over time\n\n5. Event and Market Analysis:\n   - Analyze betting volume by event or market\n   - Calculate market profitability\n   - Track market status changes\n\nData Types and Special Considerations:\n- Binary data (bytea) in several tables may contain serialized objects requiring special handling\n- Timestamp fields use timezone information (timestamp with time zone)\n- Numeric fields for financial data ensure precision\n- Character varying fields may have different length constraints\n- Boolean flags indicate feature enablement or status conditions\n\nPrimary Keys and Indexing:\n- Most tables use an 'id' column as primary key\n- sports_book uses sports_book_url as primary key\n- sports_book_aliases uses alias as primary key\n- order_setting uses account_path as primary key\n- These keys are important for efficient joins and lookups\n\n[2025-08-26 11:01:38] The system does not appear to have explicit delay timer configurations stored in the available database tables. The order_limit table has limit_key values that follow a structured format (HA/house_id/CT/SPORTS/SI/sport_id/CI/competition_id/...) but no visible delay timer settings. The house_settings table contains various configuration parameters but none specifically related to bet delays or time restrictions."
}