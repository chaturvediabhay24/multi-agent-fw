{
  "class": "CustomAgent",
  "description": "Handles financial transactions, wallet operations, and account transfers. This agent can answer questions about wallet balances, transaction history, and banking operations. Tables: wallet, wallet_domain_event, wallet_transaction, wallet_transaction_log, wallet_last_transaction, account_transfer_record, banking_transaction",
  "model_type": "bedrock",
  "model_name": "anthropic.claude-3-7-sonnet-20250219-v1:0",
  "system_prompt": [
    "",
    "You are WalletAgent, a specialized database agent focused on financial transactions and wallet operations.",
    "",
    "Your expertise covers these tables: wallet, wallet_domain_event, wallet_transaction, wallet_transaction_log, wallet_last_transaction, account_transfer_record, banking_transaction.",
    "",
    "Additional Instructions:",
    "- When a user request requires multiple tool executions (e.g., multiple independent queries or lookups), dispatch these tool calls in parallel whenever possible to minimize response time.",
    "- Aggregate and summarize the results from all parallel tool calls before responding to the user.",
    "- If any tool call fails, report the error clearly but still return results from successful tool calls.",
    "- Only execute tool calls in parallel if they are independent and do not depend on each other's results.",
    "",
    "Instructions:",
    "- Only query the tables within your domain of expertise",
    "- Only allow and execute read-only queries (e.g., SELECT). Do NOT allow or execute any queries that edit, delete, or modify the database (such as UPDATE, DELETE, INSERT, ALTER, DROP, etc.).",
    "- Never fetch or return the entire database or very large datasets in a single response. If a query could return a large amount of data, use intelligent pagination and inform the user about the data size and how to request more if needed.",
    "- Always prioritize concise, relevant answers. Summarize or aggregate results when possible to avoid context overflow.",
    "- If a user requests a restricted action (edit, delete, modify), politely refuse and explain that only read-only access is permitted.",
    "- When answering, provide clear explanations in natural language. Do NOT show SQL queries unless the user explicitly asks for them (e.g., \"show SQL\" or \"give me the query\").",
    "- Do not ask users for query confirmation. Always infer the required details and generate the answer directly.",
    "- Provide answers in clear, natural language unless the user explicitly requests otherwise.",
    "- Focus on wallet balances, transaction history, and banking operations"
  ],
  "tools": [
    "postgres_query",
    "append_memory"
  ],
  "parallel_tools": true,
  "max_parallel_tools": 3,
  "memory": [
    "[2025-08-23 11:58:17] Database Tables Structure:",
    "",
    "1. wallet",
    "Primary key: id (bigint)",
    "Key columns: account_id, user_id (implied relationship)",
    "Main columns:",
    "- id: bigint (PK)",
    "- account_id: bigint",
    "- balance: numeric (default 0.00)",
    "- bonus: numeric (default 0.00)",
    "- exposure: numeric (default 0.00)",
    "- credit_reference: numeric (default 0.00)",
    "- max_credit_reference: numeric (default 0.00)",
    "- transfer_locked: boolean (default false)",
    "- house_id: bigint",
    "- currency_type: integer",
    "- account_path: character varying",
    "- non_cashable_amount: numeric (default 0)",
    "- redeemed_bonus: numeric (default 0)",
    "",
    "2. wallet_transaction",
    "Primary key: id (bigint)",
    "Key columns: user_id, ref_id",
    "Main columns:",
    "- id: bigint (PK)",
    "- user_id: bigint (default -1)",
    "- amount: numeric (default 0.00)",
    "- balance_before: numeric (default 0.00)",
    "- balance_after: numeric (default 0.00)",
    "- transaction_type: integer",
    "- transaction_time: timestamp with time zone (default CURRENT_TIMESTAMP)",
    "- transaction_group: character varying (default 'UNKNOWN')",
    "- reference_id: character varying",
    "- request_id: character varying",
    "- initiated_by: bigint",
    "- remarks: character varying",
    "- house_id: bigint",
    "- account_path: character varying",
    "- bet_id: character varying",
    "- market_id: character varying",
    "- event_id: character varying",
    "- bonus_redeemed: numeric (default 0)",
    "- bonus_settled: numeric (default 0)",
    "- aff_comm_settled: numeric (default 0)",
    "- aff_comm_redeemed: numeric (default 0)",
    "",
    "3. wallet_transaction_log",
    "Primary key: id (bigint)",
    "Key columns: user_id, from_user_id, to_user_id",
    "Main columns:",
    "- id: bigint (PK)",
    "- user_id: bigint (default -1)",
    "- from_user_id: bigint (default -1)",
    "- to_user_id: bigint (default -1)",
    "- transaction_type: integer",
    "- transaction_group: character varying (default 'UNKNOWN')",
    "- create_time: timestamp with time zone (default CURRENT_TIMESTAMP)",
    "- reference_id: character varying",
    "- request_id: character varying",
    "- balance: numeric (default 0.00)",
    "- exposure: numeric (default 0.00)",
    "- remarks: character varying",
    "- house_id: bigint",
    "- account_path: character varying",
    "- bonus_redeemed: numeric (default 0)",
    "- bonus_settled: numeric (default 0)",
    "- aff_comm_settled: numeric (default 0)",
    "- aff_comm_redeemed: numeric (default 0)",
    "",
    "4. wallet_last_transaction",
    "Primary key: id (bigint)",
    "Key columns: user_id",
    "Main columns:",
    "- id: bigint (PK)",
    "- user_id: bigint",
    "- last_updated_balance: numeric (default 0.00)",
    "- request_id: character varying",
    "- update_time: timestamp without time zone",
    "",
    "5. wallet_domain_event",
    "Primary key: id (bigint)",
    "Main columns:",
    "- id: bigint (PK)",
    "- type: character varying",
    "- time: timestamp with time zone (default CURRENT_TIMESTAMP)",
    "- source: character varying",
    "- data: bytea",
    "- data_content_type: character varying",
    "",
    "6. account_transfer_record",
    "Primary key: id (bigint)",
    "Key columns: account_id, transfer_id",
    "Main columns:",
    "- id: bigint (PK)",
    "- transfer_id: character varying",
    "- username: character varying",
    "- account_id: bigint",
    "- balance: numeric (default 0.00)",
    "- new_parent: character varying",
    "- old_parent: character varying",
    "- transferred_by: character varying",
    "- transfer_time: timestamp with time zone (default CURRENT_TIMESTAMP)",
    "- notes: character varying",
    "",
    "7. banking_transaction",
    "Primary key: id (bigint)",
    "Key columns: username",
    "Main columns:",
    "- id: bigint (PK)",
    "- username: character varying",
    "- amount: double precision",
    "- deposit: boolean (default false)",
    "- transactions_type: integer",
    "- transaction_status_type: integer",
    "- create_time: timestamp without time zone",
    "- update_time: timestamp without time zone",
    "- reference_transaction: character varying",
    "- accepted_by: character varying",
    "- account_number: character varying",
    "- beneficiary_name: character varying",
    "- ifsccode: character varying",
    "- phone: character varying",
    "- upi: character varying",
    "",
    "Table Relationships (implied by column names):",
    "1. wallet.account_id relates to account/user tables",
    "2. wallet_transaction.user_id relates to users and wallet.account_id",
    "3. wallet_transaction_log.user_id relates to users and wallet.account_id",
    "4. wallet_last_transaction.user_id relates to users and wallet.account_id",
    "5. account_transfer_record.account_id relates to wallet.account_id",
    "6. banking_transaction.username relates to account usernames",
    "",
    "Common Join Conditions:",
    "- wallet and wallet_transaction: wallet.account_id = wallet_transaction.user_id",
    "- wallet and wallet_transaction_log: wallet.account_id = wallet_transaction_log.user_id",
    "- wallet and wallet_last_transaction: wallet.account_id = wallet_last_transaction.user_id",
    "- wallet_transaction and wallet_transaction_log: wallet_transaction.user_id = wallet_transaction_log.user_id AND wallet_transaction.request_id = wallet_transaction_log.request_id",
    "- wallet and account_transfer_record: wallet.account_id = account_transfer_record.account_id",
    "- banking_transaction can be linked to other tables via username which likely corresponds to a user identifier in other tables",
    "",
    "Transaction Types:",
    "The wallet_transaction and wallet_transaction_log tables have transaction_type and transaction_group columns that categorize different types of financial operations.",
    "",
    "[2025-08-23 11:59:24] Transaction Types and Groups:",
    "",
    "The wallet system uses transaction_type (integer) and transaction_group (character varying) to categorize financial operations:",
    "",
    "1. FUND_TRANSFER group:",
    "   - Type 0: Likely deposit/credit",
    "   - Type 1: Likely withdrawal/debit",
    "   - Type 2: Likely transfer between accounts",
    "   - Type 3: Likely another transfer type",
    "   - Type 43, 44, 45: Additional fund transfer types",
    "   - Type 47, 48, 49: Additional fund transfer types",
    "   - Type 52, 53: Additional fund transfer types",
    "",
    "2. EXCHANGE group:",
    "   - Type 7: Exchange transaction",
    "   - Type 27: Possibly betting/wagering",
    "",
    "3. SAP_EXCHANGE group:",
    "   - Type 7, 27, 28: Likely betting/wagering operations",
    "   - Type 42, 50, 51: Additional exchange operations",
    "",
    "4. SPORTS_BOOK group:",
    "   - Type 7, 28: Likely sports betting",
    "   - Type 37, 38: Additional sports betting operations",
    "",
    "5. PREMIUM group:",
    "   - Type 11, 12: Premium service operations",
    "   - Type 27, 28, 29: Possibly premium betting operations",
    "",
    "6. CASINO group:",
    "   - Type 19, 20, 21: Casino gaming operations",
    "",
    "These transaction types and groups help categorize different financial operations in the wallet system and can be used to filter and analyze specific types of transactions.",
    "",
    "[2025-08-23 13:14:02] In the wallet system, deposits appear to be recorded in the wallet_transaction table with transaction_group = 'FUND_TRANSFER' and transaction_type = 0, rather than in the banking_transaction table which has no deposit records."
  ]
}